local samples_per_beat = 15939.76
local sample_rate = 44100


local enemy_type = "Normal"

local pos_x, pos_y, pos_z = "0", "0", "0"
local quat_x, quat_y, quat_z, quat_w = "0", "1", "0", "0"

local string_start = "{\"version\":\"0.4\",\"beatData\":["
local group_start = "{\"time\":\""
local group_mid = "\",\"sample\":\""
local group_end = "\",\"label\":\"\",\"targets\":["
local enemy_1 = "{\"enemyType\":\"Normal\",\"distance\":\"Middle\",\"placement\":\"0,0\",\"enemyOffset\":\""
local enemy_2 = "\",\"enemySequence\":\"Gallop_Forward_NoShoot\",\"bonusEnemy\":\"False\",\"shielded\":\""
local enemy_3 = "\",\"noGround\":\"True\",\"noCarve\":\"False\"}"
local group_final = "],\"obstacles\":[],\"dynamicObstacles\":[]},"

local string_end = "]}"

local str = ""
local is_shielded = {[0] = "False", [1] = "True"}

local notes

local function time_from_sample(sample)
	return tostring(sample / sample_rate)
end

local function add_enemy(_lineIndex, _lineLayer, _type, _cutDirection, _time)
	local pos_x = -0.5 + (0.25 * _lineIndex)
	local pos_y = 0 + (0.25 * _lineLayer)
	local _sample = (_time - 2.5) * samples_per_beat
	local time = time_from_sample(_sample)
	local pos_z = time * -3
	str = str..group_start..time..group_mid.._sample..group_end
	str = str..enemy_1..tostring(pos_x)..","..tostring(pos_y)..","..pos_z..",0,1,0,0"..enemy_2..is_shielded[_type]..enemy_3
	str = str..group_final
end

local function read_data(filename)
	local _file = io.input(filename)
	local beat_saber_data = json.decode(io.read("*a"))
	notes = beat_saber_data._notes
end

function init(self)
	read_data("Expert.dat")
	
	
	str = string_start

	local previous_beat = -1

	for key, val in ipairs(notes) do
		if val._type < 2 then
			if not (val._time == previous_beat) then
				previous_beat = val._time
				add_enemy(val._lineIndex, val._lineLayer, val._type, val._cutDirection, val._time)
			end
		end
	end

	str = str..string_end

	
	local _file = io.output("bs.pw_beat")
	io.write(str)
end